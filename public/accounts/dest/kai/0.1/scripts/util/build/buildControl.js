// compute global copyright, if any

require({cache:{"url:util/build/help.txt":"NAME\n     The Dojo Builder - Read, process, and write a set of resources as instructed by a profile.\n\nDESCRIPTION\n     Discover and process a set of resources with an ordered synchronized set of transforms.\n\n     See http://dojotoolkit.org/reference-guide/build/index.html for reference documentation.\n     \n     See http://dojotoolkit.org/reference-guide/build/qref.html for a quick reference manual.\n\n     Typically this program is executed with the convience wrapper /util/buildscripts/build.bat (Window) or\n     /util/buildscripts/build.sh (all other environments); it may also be executed explicitly.\n\n     Usage with the build script on non-windows:\n     path/to/util/buildscripts/build.sh [options]\n     \n     Usage with the build script on windows:\n     IMPORTANT: the util/buildscripts directory must be the current working directory\n     build.bat [options]\n\n     Explicit usage with node.js:\n     node path/to/dojo/dojo.js load=build [options] \n     \n     Explicit usage with java:\n     java -Xms256m -Xmx256m -jar path/to/util/shrinksafe/js.jar path/to/dojo/dojo.js baseUrl=path/to/dojo load=build [options]\n     \n     IMPORTANT:\n     This program assumes the default directory structure provided with the standard dojo source release.\n     \n     IMPORTANT:\n     When using v1.6- profiles, this program assumes the current working directory is utils/buildscripts.\n\nOPTIONS\n     -p <filename>\n     --profile <filename>      read profile for file\n     \n     -p <profile>\n     --profile <profile>       read profile from profile in util/buildscripts/profiles\n     \n     --package <path>          read profile from package.json located in the directory path\n     \n     --require <filename>\n     --dojoConfig              read profile from loader configuration \n     \n     --htmlFiles <file-list>   deduce profile from HTML file(s); file-list is a comma-separated list of filenames\n     \n     --htmlDir <path>          deduce profile from all HTML files in directory at path\n     \n     --check-args              print computed raw command line input, including raw profiles, then terminate\n     \n     --check                   print computed profile, then terminate\n     \n     --check-discovery         print all discovered resources, then terminate\n     \n     --debug-check             print computed profile, including internal structures\n     \n     -r\n     --release                 process the build control script(s) and/or profile(s) and transform sources into a release\n     \n     --releaseDir <path>       base directory for build output\n     \n     --releaseName <string>    path segment to append to releaseDir that gives base directory for build output\n\n     --layerOptimize <arg>     process all layer resources in order to minimize resource size; arg as follows:\n                                   comments             => remove comments with ShrinkSafe\n                                   comments.keeplines   => as above, but don't remove newlines\n                                   shrinksafe           => minimize with ShrinkSafe\n                                   shrinksafe.keeplines => as above, but don't remove newlines\n                                   closure              => minimize with the Google Closure compiler\n                                   closure.keeplines    => as above, but don't remove newlines\n                                   uglify               => minimize with Uglify\n                                   uglify.keeplines     => as above, but don't remove newlines\n                               (note: all args are case-insensitive)\n\n     --optimize <arg>          analogous to --layerOptimize, but applied to non-layer resources\n\n     --useSourceMaps <arg>     create source maps when the Google Closure compiler is used; arg as follows:\n                                   true  => create source maps (default)\n                                   false => don't create source maps\n\n     --copyTests <arg>         copy test files and the DOH package; arg as follows:\n                                   false => don't copy tests\n                                   true  => copy test resources, but don't apply any transforms\n                                   build => copy and build tests resources just as if they were normal resources\n\n     --mini                    Ignore resources tagged as not mini (e.g. tests, demos dijit/bench, etc.)\n     \n     -v                        print the program's version number\n     \n     --help                    this help message\n     \n     Scalar profile property values may also be specified as options with the syntax\n     \n          --<profile-property-name> <value>\n     \n"}}),define("util/build/buildControl",["require","dojo/_base/lang","./argv","./fs","./fileUtils","./buildControlDefault","./v1xProfiles","./stringify","./process","./messages","dojo/text!./help.txt"],function(require,lang,argv,fs,fileUtils,bc,v1xProfiles,stringify,process,messages,helpText){function getDiscreteLocales(e){for(var t=e.split("-"),a=[],o="",i=0;i<t.length;i++)a.push(o+=(i?"-":"")+t[i]);return a}function fixupOptimize(e){return e&&(e+="",e=e.toLowerCase(),/^(((comments|shrinksafe)(\.keeplines)?)|(closure(\.keeplines)?|uglify(\.keeplines)?))$/.test(e)?/shrinksafe/.test(e)&&stripConsole&&(e+="."+stripConsole):(bc.log("inputUnknownOptimize",["value",e]),e=0)),e}if(!isNaN(argv))return bc.exitCode=argv,bc;eval(require.scopeify("./fs, ./fileUtils, ./v1xProfiles"));var isString=function(e){return"string"==typeof e},isNonemptyString=function(e){return isString(e)&&e.length},isDefined=function(e){return"undefined"!=typeof e},cleanupFilenamePair=function(e,t,a,o){var i;return i=isString(e)?[computePath(e,t),computePath(e,a)]:[computePath(e[0],t),computePath(e[1],a)].concat(e.slice(2)),isAbsolutePath(i[0])&&isAbsolutePath(i[1])||bc.log("inputInvalidPath",["path",e,"hint",o]),i},slashTerminate=function(e){return e+/\/$/.test(e)?"":"/"},isEmpty=function(e){for(var t in e)return!1;return!0},cleanDeprecated=function(e,t){var a=[];for(p in e)/^(log|loader|xdDojoPath|scopeDjConfig|xdScopeArgs|xdDojoScopeName|expandProvide|buildLayers|query|removeDefaultNameSpaces|addGuards)$/.test(p)&&(a.push(p),bc.log("inputDeprecated",["switch",p,t]));a.forEach(function(t){delete e[t]})},mix=function(e,t){e=e||{},t=t||{};for(var a in t)e[a]=t[a];return e},mixPackage=function(e){var t=e.name;bc.packageMap[t]=mix(bc.packageMap[t],e)},mixProfileObject=function(e){cleanDeprecated(e,e.selfFilename);for(var t in e)/paths|plugins|messages|transforms|staticHasFeatures|packages|packagePaths|defaultConfig/.test(t)||(bc[t]=e[t]);if(["paths","plugins","transforms","staticHasFeatures"].forEach(function(t){bc[t]=mix(bc[t],e[t])}),e.messageCategories)for(t in e.messageCategories)bc.addCategory(t,e.messageCategories[t]);(e.messages||[]).forEach(function(e){bc.addMessage.apply(bc,e)});for(var a in e.packagePaths)e.packagePaths[a].forEach(function(e){isString(e)&&(e={name:e}),e.location=catPath(a,e.name),mixPackage(e)});(e.packages||[]).forEach(function(e){isString(e)&&(e={name:e}),mixPackage(e)});for(t in e.defaultConfig)"hasCache"==t?mix(bc.defaultConfig.hasCache,e.defaultConfig.hasCache):bc.defaultConfig[t]=e.defaultConfig[t]};argv.args.profiles.forEach(function(e){var t=mix({},e),a=e.build;delete t.build,mixProfileObject(t),a&&mixProfileObject(a)}),cleanDeprecated(argv.args,"command line");for(var argName in argv.args)"profiles"!=argName&&(bc[argName]=argv.args[argName]);bc.basePath=computePath(bc.basePath,process.cwd());var releaseDir=catPath(bc.releaseDir||"../release",bc.releaseName||"");if(bc.destBasePath=computePath(releaseDir,bc.basePath),bc.copyright=isNonemptyString(bc.copyright)?maybeRead(computePath(bc.copyright,bc.basePath))||bc.copyright:"",bc.copyrightLayers=!!bc.copyrightLayers,bc.copyrightNonlayers=!!bc.copyrightNonlayers,function(){for(var e in{files:1,dirs:1,trees:1})bc[e]instanceof Array&&(bc[e]=bc[e].map(function(t){return cleanupFilenamePair(t,bc.basePath,bc.destBasePath,e)}))}(),function(){var e,t={};for(e in bc.replacements)t[computePath(e,bc.basePath)]=bc.replacements[e];bc.replacements=t}(),"mini"in bc||(bc.mini=!0),"copyTests"in bc||(bc.copyTests=!bc.mini),isString(bc.copyTests)&&(bc.copyTests=bc.copyTests.toLowerCase()),"build"!=bc.copyTests&&(bc.copyTests=!!bc.copyTests),isString(bc.localeList)&&(bc.localeList=bc.localeList.split(","),bc.localeList.length&&(bc.localeList=bc.localeList.map(function(e){return lang.trim(e)}))),bc.localeList&&bc.localeList.length){-1==bc.localeList.indexOf("ROOT")&&bc.localeList.push("ROOT");var localeList={};bc.localeList.forEach(function(e){e=lang.trim(e),localeList[e]=getDiscreteLocales(e)}),bc.localeList.discreteLocales=localeList}else bc.localeList=!1;!function(){function e(e){var t=e.name,a=e.basePath||bc.basePath;e.packageJson||(e.packageJson=argv.readPackageJson(catPath(computePath(e.location||"./"+t,a),"package.json"),"missingPackageJson"));var o=e.packageJson;if(o)if(o.version&&(bc.log("packageVersion",["package",t,"version",o.version]),"undefined"==typeof bc.version&&"dojo"==t&&(bc.version=o.version)),o.main&&!e.main&&(e.main=o.main),o.directories&&o.directories.lib&&!e.location&&(e.location=catPath(getFilepath(o.selfFilename),o.directories.lib)),"dojoBuild"in o){var i=argv.readProfile("profile",catPath(getFilepath(o.selfFilename),o.dojoBuild));for(var r in i)r in e?r in{resourceTags:1}&&mix(e[r],i[r]):e[r]=i[r]}else bc.log("missingProfile",["package",o.name]);e.main=isString(e.main)?e.main:"main",0==e.main.indexOf("./")&&(e.main=e.main.substring(2)),e.destMain&&0==e.destMain.indexOf("./")&&(e.destMain=e.destMain.substring(2)),e.location=computePath(e.location||"./"+t,a),e.copyright=isNonemptyString(e.copyright)?maybeRead(computePath(e.copyright,e.location))||maybeRead(computePath(e.copyright,bc.basePath))||e.copyright:e.copyright?bc.copyright:"",e.copyrightLayers=isDefined(e.copyrightLayers)?!!e.copyrightLayers:bc.copyrightLayers,e.copyrightNonlayers=isDefined(e.copyrightNonlayers)?!!e.copyrightNonlayers:bc.copyrightNonlayers;var s=bc.destPackages[t]={name:e.destName||t,main:e.destMain||e.main,location:computePath(e.destLocation||"./"+(e.destName||t),bc.destBasePath)};delete e.destName,delete e.destMain,delete e.destLocation,e.trees||(e.trees=[[e.location,s.location,/(\/\.)|(^\.)|(~$)/]]);for(var n in{files:1,dirs:1,trees:1})e[n]=(e[n]||[]).map(function(a){return cleanupFilenamePair(a,e.location,s.location,n+" in package "+t)})}bc.packages=bc.packageMap,delete bc.packageMap,bc.destPackages={};for(var t in bc.packages){var a=bc.packages[t];a.name=a.name||t,e(a)}bc.copyTests&&!bc.packages.doh&&(bc.packages.doh={name:"doh",location:compactPath(bc.packages.dojo.location+"/../util/doh"),destLocation:"util/doh"},e(bc.packages.doh)),require.computeAliases(bc.aliases,bc.aliasesMap=[]),require.computeMapProg(bc.paths,bc.pathsMapProg=[]),bc.mapProgs=[],require.computeMapProg(bc.map,bc.mapProgs),bc.mapProgs.forEach(function(e){e[1]=require.computeMapProg(e[1],[]),"*"==e[0]&&(bc.mapProgs.star=e)}),bc.srcModules={},bc.destModules={};var o=function(e,t){return e.substring(0,e.length-t)};bc.getSrcModuleInfo=function(e,t,a){if(a){var i=require.getModuleInfo(e+"/x",t,bc.packages,bc.srcModules,bc.basePath+"/",bc.mapProgs,bc.pathsMapProg,bc.aliasesMap,!0);return i.mid=o(i.mid,2),0!==i.pid&&(i.url=o(i.url,5)),i}return require.getModuleInfo(e,t,bc.packages,bc.srcModules,bc.basePath+"/",bc.mapProgs,bc.pathsMapProg,bc.aliasesMap,!0)},bc.getDestModuleInfo=function(e,t,a){if(a){var i=require.getModuleInfo(e+"/x",t,bc.destPackages,bc.destModules,bc.destBasePath+"/",[],[],[],!0);return i.mid=o(i.mid,2),0!==i.pid&&(i.url=o(i.url,5)),i}return require.getModuleInfo(e,t,bc.destPackages,bc.destModules,bc.destBasePath+"/",[],[],[],!0)},bc.getAmdModule=function(e,t){var a=e.match(/^([^\!]+)\!(.*)$/);if(a){var o=bc.getSrcModuleInfo(a[1],t),i=o&&bc.amdResources[o.mid],r=i&&i.mid,s=bc.plugins[r];if(i){if(s){var n=[].concat(s.start(a[2],t,bc));return n.concat.apply([],n)}return i.noBuildResolver||bc.log("missingPluginResolver",["module",t.mid,"plugin",r]),i}return 0}var c=bc.getSrcModuleInfo(e,t),l=c&&bc.amdResources[c.mid];return l}}(),bc.selectorEngine&&bc.defaultConfig&&bc.defaultConfig.hasCache&&(bc.defaultConfig.hasCache["config-selectorEngine"]=bc.selectorEngine),function(){var e,t={};for(var a in bc.layers){e=bc.layers[a],e.exclude=e.exclude||[],e.include=e.include||[],e.boot=!!e.boot,e.discard=!!e.discard,e.compat=void 0!==e.compat?e.compat:bc.layerCompat||"",e.noref=!!(void 0!==e.noref?e.noref:"1.6"==e.compat?!0:bc.noref);var o=a.split("/")[0],i=bc.packages[o],r=i&&i.location,s=i&&i.copyright,n=i&&i.copyrightLayers;isNonemptyString(e.copyright)?e.copyright=r&&maybeRead(computePath(e.copyright,r))||maybeRead(computePath(e.copyright,bc.basePath))||e.copyright:isDefined(e.copyright)?e.copyright=e.copyright?s||bc.copyright:"":e.copyright=i?n&&(s||bc.copyright):bc.copyrightLayers&&bc.copyright,e.copyright||(e.copyright=""),t[a]=e}if(bc.layers=t,bc.packages.dojo){bc.layers["dojo/dojo"]||(bc.layers["dojo/dojo"]={name:"dojo/dojo",copyright:bc.defaultCopyright+bc.defaultBuildNotice,include:["dojo/main"],exclude:[]});for(var c in bc.layers)e=bc.layers[c],"dojo/dojo"==c?e.customBase||-1==e.include.indexOf("dojo/main")&&e.include.push("dojo/main"):(!e.boot&&e.customBase||-1!=e.exclude.indexOf("dojo/dojo")||e.exclude.push("dojo/dojo"),e.customBase=e.boot)}}();var deleteStaticHasFlagSet=[];for(var p in bc.staticHasFeatures)-1==bc.staticHasFeatures[p]&&deleteStaticHasFlagSet.push(p);deleteStaticHasFlagSet.forEach(function(e){delete bc.staticHasFeatures[e]}),bc.action&&bc.action.split(/\W|\s/).forEach(function(e){switch(e=e.match(/\s*(\S+)\s*/)[1]){case"check":bc.check=!0;break;case"clean":bc.clean=!0;break;case"release":bc.release=!0;break;default:bc.log("inputUnknownAction",["action",e])}}),bc.clean&&bc.log("cleanRemoved");var stripConsole=bc.stripConsole;return stripConsole&&"none"!=stripConsole?"normal,warn"==stripConsole?(bc.log("inputDeprecatedStripConsole",["deprecated","normal,warn","use","warn"]),stripConsole="warn"):"normal,error"==stripConsole?(bc.log("inputDeprecatedStripConsole",["deprecated","normal,error","use","all"]),stripConsole="all"):/normal|warn|all|none/.test(stripConsole)||bc.log("inputUnknownStripConsole",["value",stripConsole]):stripConsole=!1,bc.stripConsole=stripConsole,bc.optimize=fixupOptimize(bc.optimize),bc.layerOptimize=fixupOptimize(bc.layerOptimize),function(){var e={dojo:"dojo",dijit:"dijit",dojox:"dojox"};(bc.scopeMap||[]).forEach(function(t){t[1]?e[t[0]]=t[1]:delete e[t[0]]}),bc.scopeMap=e,bc.scopeNames=[];for(var t in e)bc.scopeNames.push(t)}(),bc.internSkip=function(){return!1},bc.internSkipList&&(bc.internSkip=function(e,t){return bc.internSkipList.some(function(a){var o=!1;return o=a instanceof RegExp?a.test(e):a instanceof Function?a(e,t):a==e,o&&bc.log("internStrings",["module",t.mid,"skipping",e]),o})}),bc.check&&(!function(){var e={aliases:1,basePath:1,buildReportDir:1,buildReportFilename:1,closureCompilerPath:1,copyright:1,copyrightLayers:1,copyrightNonlayers:1,copyTests:1,destBasePath:1,destModules:1,destPackages:1,destPathTransforms:1,dirs:1,discoveryProcs:1,files:1,insertAbsMids:1,internStringsSkipList:1,layers:1,localeList:1,includeLocales:1,maxOptimizationProcesses:1,mini:1,optimize:1,layerOptimize:1,"package":1,packages:1,paths:1,pathsMapProg:1,plugins:1,replacements:1,startTimestamp:1,staticHasFeatures:1,stripConsole:1,trees:1,useSourceMaps:1};for(var t in e)e[t]=bc[t];bc.log("pacify",stringify(e))}(),bc.release=0),bc.writeProfile,bc.debugCheck&&(!function(){var e={};for(var t in bc)bc[t]!==messages[t]&&"function"!=typeof bc[t]&&(e[t]=bc[t]);e={};for(t in require)"modules"!=t&&"module"!=t&&"rawConfig"!=t&&"function"!=typeof require[t]&&(e[t]=require[t])}(),bc.release=0),function(){for(var e={},t=0;t<bc.gates.length;t++)e[bc.gates[t][1]]=t;var a,o=bc.transforms;for(var i in o)a=e[o[i][1]],"undefined"==typeof a?bc.log("inputUnknownGate",["transform",i,"gate",o[i][1]]):o[i][1]=a}(),function(){var e=bc.transforms;bc.transformJobs.forEach(function(t){var a=!1,o=t[1].map(function(t){return e[t]?[t,e[t][1]]:(a=!0,bc.log("inputUnknownTransform",["transform",t]),0)});if(!a){for(var i=0,r=o.length-1;r>i;)if(o[i][1]>o[i+1][1]){var s=o[i];o[i]=o[i+1],o[i+1]=s,i&&i--}else i++;t[1]=o}})}(),"dumpbc"==argv.args.unitTest,bc.quiet&&!function(){var e={};for(var t in bc.pacifySet)bc.messageMap[t][1]>199&&(e[t]=1);for(t in e)delete bc.pacifySet[t]}(),bc.unitTestComputedProfile&&(bc.unitTestComputedProfile(),bc.release=0),bc.unitTestComputedProfile||bc.check||bc.debugCheck||bc.clean||bc.release||bc.log("pacify","Nothing to do; you must explicitly instruct the application to do something; use the option --help for help."),bc});