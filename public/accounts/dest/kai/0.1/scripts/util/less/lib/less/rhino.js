define("util/less/lib/less/rhino",["dojo","dijit","dojox"],function(t,e,n){function i(t,e){var n=new java.io.FileWriter(t),i=new java.io.BufferedWriter(n);i.write(e),i.close()}function r(t,e){var n="Error : "+e+"\n";e=t.filename||e,t.message&&(n+=t.message+"\n");var i=function(t,e,i){t.extract[e]&&(n+=String(parseInt(t.line)+(e-1))+":"+t.extract[e]+"\n")};t.stack?n+=t.stack:t.extract&&(n+="on line "+t.line+", column "+(t.column+1)+":\n",i(t,0),i(t,1),i(t,2)),print(n)}var a;!function(t){var e,n,o=!1;for(n=0;n<t.length;n++)switch(t[n]){case"-x":o=!0;break;default:a?e?(print("unrecognised parameters"),print("input_file [output_file] [-x]")):e=t[n]:a=t[n]}a||(print("No files present in the fileset; Check your pattern match in build.xml"),quit(1)),path=a.split("/"),path.pop(),path=path.join("/");var s=readFile(a);s||(print("lesscss: couldn't open file "+a),quit(1));var l;try{var c=new less.Parser;c.parse(s,function(t,n){t?(r(t,a),quit(1)):(l=n.toCSS({compress:o||!1}),e?(i(e,l),print("Written to "+e)):print(l),quit(0))})}catch(p){r(p,a),quit(1)}print("done")}(arguments)});