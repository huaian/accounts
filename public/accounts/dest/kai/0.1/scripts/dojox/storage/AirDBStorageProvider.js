define("dojox/storage/AirDBStorageProvider",["dojo","dijit","dojox","dojo/require!dojox/storage/manager,dojox/storage/Provider"],function(e,a,t){e.provide("dojox.storage.AirDBStorageProvider"),e.require("dojox.storage.manager"),e.require("dojox.storage.Provider"),e.isAIR&&!function(){if(!a)var a={};a.File=window.runtime.flash.filesystem.File,a.SQLConnection=window.runtime.flash.data.SQLConnection,a.SQLStatement=window.runtime.flash.data.SQLStatement,e.declare("dojox.storage.AirDBStorageProvider",[t.storage.Provider],{DATABASE_FILE:"dojo.db",TABLE_NAME:"__DOJO_STORAGE",initialized:!1,_db:null,initialize:function(){this.initialized=!1;try{this._db=new a.SQLConnection,this._db.open(a.File.applicationStorageDirectory.resolvePath(this.DATABASE_FILE)),this._sql("CREATE TABLE IF NOT EXISTS "+this.TABLE_NAME+"(namespace TEXT, key TEXT, value TEXT)"),this._sql("CREATE UNIQUE INDEX IF NOT EXISTS namespace_key_index ON "+this.TABLE_NAME+" (namespace, key)"),this.initialized=!0}catch(e){}t.storage.manager.loaded()},_sql:function(e,t){var i=new a.SQLStatement;if(i.sqlConnection=this._db,i.text=e,t)for(var n in t)i.parameters[n]=t[n];return i.execute(),i.getResult()},_beginTransaction:function(){this._db.begin()},_commitTransaction:function(){this._db.commit()},isAvailable:function(){return!0},put:function(e,a,t,i){if(0==this.isValidKey(e))throw new Error("Invalid key given: "+e);if(i=i||this.DEFAULT_NAMESPACE,0==this.isValidKey(i))throw new Error("Invalid namespace given: "+i);try{this._sql("DELETE FROM "+this.TABLE_NAME+" WHERE namespace = :namespace AND key = :key",{":namespace":i,":key":e}),this._sql("INSERT INTO "+this.TABLE_NAME+" VALUES (:namespace, :key, :value)",{":namespace":i,":key":e,":value":a})}catch(n){return void t(this.FAILED,e,n.toString())}t&&t(this.SUCCESS,e,null,i)},get:function(e,a){if(0==this.isValidKey(e))throw new Error("Invalid key given: "+e);a=a||this.DEFAULT_NAMESPACE;var t=this._sql("SELECT * FROM "+this.TABLE_NAME+" WHERE namespace = :namespace AND key = :key",{":namespace":a,":key":e});return t.data&&t.data.length?t.data[0].value:null},getNamespaces:function(){var e=[this.DEFAULT_NAMESPACE],a=this._sql("SELECT namespace FROM "+this.TABLE_NAME+" DESC GROUP BY namespace");if(a.data)for(var t=0;t<a.data.length;t++)a.data[t].namespace!=this.DEFAULT_NAMESPACE&&e.push(a.data[t].namespace);return e},getKeys:function(e){if(e=e||this.DEFAULT_NAMESPACE,0==this.isValidKey(e))throw new Error("Invalid namespace given: "+e);var a=[],t=this._sql("SELECT key FROM "+this.TABLE_NAME+" WHERE namespace = :namespace",{":namespace":e});if(t.data)for(var i=0;i<t.data.length;i++)a.push(t.data[i].key);return a},clear:function(e){if(0==this.isValidKey(e))throw new Error("Invalid namespace given: "+e);this._sql("DELETE FROM "+this.TABLE_NAME+" WHERE namespace = :namespace",{":namespace":e})},remove:function(e,a){a=a||this.DEFAULT_NAMESPACE,this._sql("DELETE FROM "+this.TABLE_NAME+" WHERE namespace = :namespace AND key = :key",{":namespace":a,":key":e})},putMultiple:function(e,a,t,i){if(this.isValidKeyArray(e)===!1||!a instanceof Array||e.length!=a.length)throw new Error("Invalid arguments: keys = ["+e+"], values = ["+a+"]");if((null==i||"undefined"==typeof i)&&(i=this.DEFAULT_NAMESPACE),0==this.isValidKey(i))throw new Error("Invalid namespace given: "+i);this._statusHandler=t;try{this._beginTransaction();for(var n=0;n<e.length;n++)this._sql("DELETE FROM "+this.TABLE_NAME+" WHERE namespace = :namespace AND key = :key",{":namespace":i,":key":e[n]}),this._sql("INSERT INTO "+this.TABLE_NAME+" VALUES (:namespace, :key, :value)",{":namespace":i,":key":e[n],":value":a[n]});this._commitTransaction()}catch(s){return void(t&&t(this.FAILED,e,s.toString(),i))}t&&t(this.SUCCESS,e,null)},getMultiple:function(e,a){if(this.isValidKeyArray(e)===!1)throw new Error("Invalid key array given: "+e);if((null==a||"undefined"==typeof a)&&(a=this.DEFAULT_NAMESPACE),0==this.isValidKey(a))throw new Error("Invalid namespace given: "+a);for(var t=[],i=0;i<e.length;i++){var n=this._sql("SELECT * FROM "+this.TABLE_NAME+" WHERE namespace = :namespace AND key = :key",{":namespace":a,":key":e[i]});t[i]=n.data&&n.data.length?n.data[0].value:null}return t},removeMultiple:function(e,a){a=a||this.DEFAULT_NAMESPACE,this._beginTransaction();for(var t=0;t<e.length;t++)this._sql("DELETE FROM "+this.TABLE_NAME+" WHERE namespace = namespace = :namespace AND key = :key",{":namespace":a,":key":e[t]});this._commitTransaction()},isPermanent:function(){return!0},getMaximumSize:function(){return this.SIZE_NO_LIMIT},hasSettingsUI:function(){return!1},showSettingsUI:function(){throw new Error(this.declaredClass+" does not support a storage settings user-interface")},hideSettingsUI:function(){throw new Error(this.declaredClass+" does not support a storage settings user-interface")}}),t.storage.manager.register("dojox.storage.AirDBStorageProvider",new t.storage.AirDBStorageProvider),t.storage.manager.initialize()}()});