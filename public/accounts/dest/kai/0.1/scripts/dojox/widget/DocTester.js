define("dojox/widget/DocTester",["dojo","dijit","dojox","dojo/require!dojo/string,dijit/_Widget,dijit/_Templated,dojox/form/BusyButton,dojox/testing/DocTest"],function(t,e,s){t.provide("dojox.widget.DocTester"),t.require("dojo.string"),t.require("dijit._Widget"),t.require("dijit._Templated"),t.require("dojox.form.BusyButton"),t.require("dojox.testing.DocTest"),t.declare("dojox.widget.DocTester",[e._Widget,e._Templated],{templateString:t.cache("dojox.widget","DocTester/DocTester.html",'<div dojoAttachPoint="domNode" class="dojoxDocTester">\n	<div dojoAttachPoint="containerNode"></div>\n	<button dojoType="dojox.form.BusyButton" busyLabel="Testing..." dojoAttachPoint="runButtonNode">Run tests</button>\n	<button dojoType="dijit.form.Button" dojoAttachPoint="resetButtonNode" style="display:none;">Reset</button>\n	<span>\n		<span dojoAttachPoint="numTestsNode">0</span> tests,\n		<span dojoAttachPoint="numTestsOkNode">0</span> passed,\n		<span dojoAttachPoint="numTestsNokNode">0</span> failed\n	</span>\n</div>'),widgetsInTemplate:!0,_fillContent:function(e){var o=e.innerHTML;this.doctests=new s.testing.DocTest,this.tests=this.doctests.getTestsFromString(this._unescapeHtml(o));for(var n=t.map(this.tests,"return item.line-1"),i=o.split("\n"),d='<div class="actualResult">FAILED, actual result was: <span class="result"></span></div>',r='<pre class="testCase testNum0 odd">',u=0;u<i.length;u++){var a=t.indexOf(n,u);if(a>0&&-1!=a){var l=a%2?"even":"odd";r+=d,r+='</pre><pre class="testCase testNum'+a+" "+l+'">'}r+=i[u].replace(/^\s+/,"")+"\n"}r+=d+"</pre>",this.containerNode.innerHTML=r},postCreate:function(){this.inherited("postCreate",arguments),t.connect(this.runButtonNode,"onClick",t.hitch(this,"runTests")),t.connect(this.resetButtonNode,"onClick",t.hitch(this,"reset")),this.numTestsNode.innerHTML=this.tests.length},runTests:function(){for(var e={ok:0,nok:0},s=0;s<this.tests.length;s++){var o=this.doctests.runTest(this.tests[s].commands,this.tests[s].expectedResult);if(t.query(".testNum"+s,this.domNode).addClass(o.success?"resultOk":"resultNok"),o.success)e.ok++,this.numTestsOkNode.innerHTML=e.ok;else{e.nok++,this.numTestsNokNode.innerHTML=e.nok;var n=t.query(".testNum"+s+" .actualResult",this.domNode)[0];t.style(n,"display","inline"),t.query(".result",n)[0].innerHTML=t.toJson(o.actualResult)}}this.runButtonNode.cancel(),t.style(this.runButtonNode.domNode,"display","none"),t.style(this.resetButtonNode.domNode,"display","")},reset:function(){t.style(this.runButtonNode.domNode,"display",""),t.style(this.resetButtonNode.domNode,"display","none"),this.numTestsOkNode.innerHTML="0",this.numTestsNokNode.innerHTML="0",t.query(".actualResult",this.domNode).style("display","none"),t.query(".testCase",this.domNode).removeClass("resultOk").removeClass("resultNok")},_unescapeHtml:function(t){return t=String(t).replace(/&amp;/gm,"&").replace(/&lt;/gm,"<").replace(/&gt;/gm,">").replace(/&quot;/gm,'"')}})});