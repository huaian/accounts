define("dojox/grid/enhanced/plugins/filter/FilterBuilder",["dojo/_base/declare","dojo/_base/array","dojo/_base/lang","./_FilterExpr"],function(e,t,r,n){var a=function(e){return r.partial(function(e,t){return new n[e](t)},e)},o=function(e){return r.partial(function(e,t){return new n.LogicNOT(new n[e](t))},e)};return e("dojox.grid.enhanced.plugins.filter.FilterBuilder",null,{buildExpression:function(e){if("op"in e)return this.supportedOps[e.op.toLowerCase()](t.map(e.data,this.buildExpression,this));var n=r.mixin(this.defaultArgs[e.datatype],e.args||{});return new this.supportedTypes[e.datatype](e.data,e.isColumn,n)},supportedOps:{equalto:a("EqualTo"),lessthan:a("LessThan"),lessthanorequalto:a("LessThanOrEqualTo"),largerthan:a("LargerThan"),largerthanorequalto:a("LargerThanOrEqualTo"),contains:a("Contains"),startswith:a("StartsWith"),endswith:a("EndsWith"),notequalto:o("EqualTo"),notcontains:o("Contains"),notstartswith:o("StartsWith"),notendswith:o("EndsWith"),isempty:a("IsEmpty"),range:function(e){return new n.LogicALL(new n.LargerThanOrEqualTo(e.slice(0,2)),new n.LessThanOrEqualTo(e[0],e[2]))},logicany:a("LogicANY"),logicall:a("LogicALL")},supportedTypes:{number:n.NumberExpr,string:n.StringExpr,"boolean":n.BooleanExpr,date:n.DateExpr,time:n.TimeExpr},defaultArgs:{"boolean":{falseValue:"false",convert:function(e,t){var n=t.falseValue,a=t.trueValue;if(r.isString(e)){if(a&&e.toLowerCase()==a)return!0;if(n&&e.toLowerCase()==n)return!1}return!!e}}}})});